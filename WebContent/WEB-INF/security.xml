<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">
		
		<global-method-security pre-post-annotations="enabled"/>
	<http auto-config="true" use-expressions="true">	
		<intercept-url pattern="/users**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/account**" access="hasRole('ROLE_USER')" />
		<form-login login-page="/login"/>
		<logout   logout-url="/logout" delete-cookies="JSESSIONID" invalidate-session="true" logout-success-url="/login"/>
	</http>
	<authentication-manager>
		<authentication-provider>
		<password-encoder hash="bcrypt"></password-encoder>
<!-- 			<user-service> -->
<!-- 				<user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" /> -->
<!-- 			</user-service> -->
			<jdbc-user-service data-source-ref="dataSource"
			authorities-by-username-query="select User.name,Role.name from User join User_Role on User_Role.users_id=User.id join Role on User_Role.roles_id=Role.id
			where User.name=? " 
			users-by-username-query="select name,password,enabled from User where name=?"
			/>
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>